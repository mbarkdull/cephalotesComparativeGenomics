#!/bin/bash

##### Get everything set up:
# Export required paths:
export LD_LIBRARY_PATH=/usr/local/gcc-7.3.0/lib64:/usr/local/gcc-7.3.0/lib

# Make a directory for BUSTED-PH outputs:
mkdir ./09_bustedPHResults/
cd ./09_bustedPHResults/
git clone https://github.com/veg/hyphy-analyses.git hyphy-analyses
cd ../
mkdir 06_AlignedNucleotideOrthogroups/alignedOrthogroupNucleotideSequences/cleaned/

##### Construct the list of inputs:
# List all of the orthogroup sequence files:
ls -hSr 06_AlignedNucleotideOrthogroups/alignedOrthogroupNucleotideSequences > bustedPHSequenceFileList.txt
rm fileListBUSTEDPH.txt

# Read the list of orthogroup sequence files.
# If a tree file DOES exist and an output file does NOT exist, add that orthogroup sequence file to the input list, fileListBUSTEDPH.txt
while read -r line;
do
    export orthogroupNumber=`echo "$line" | awk -F'.' '{print ($1)}'`
    export treeFile="07_labelledPhylogenies/labelled_"$orthogroupNumber"_tree.txt"
    if [ -f "$treeFile" ]; then
        echo "$treeFile exists."
        FILE="./09_bustedPHResults/"$orthogroupNumber"_bustedPH.json"
        if [ -f "$FILE" ]; then
            echo "*************************************************************"
            echo "$FILE exists; BUSTED-PH has already been run on this orthogroup."
            echo "*************************************************************"
        else
          if grep --quiet oreground $treeFile; then
            export cleanedOrthogroups=06_AlignedNucleotideOrthogroups/alignedOrthogroupNucleotideSequences/cleaned/cleaned_"$orthogroupNumber".fa
            if [ -f "$cleanedOrthogroups" ]; then
              echo File contains foreground tips and has already been cleaned.
              echo 06_AlignedNucleotideOrthogroups/alignedOrthogroupNucleotideSequences/cleaned/cleaned_"$orthogroupNumber".fa >> fileListBUSTEDPH.txt
            else
              echo File contains foreground tips. Removing stop codons from orthogroup sequences.
              (echo 1; echo 06_AlignedNucleotideOrthogroups/alignedOrthogroupNucleotideSequences/"$orthogroupNumber".fa; echo 1; echo 06_AlignedNucleotideOrthogroups/alignedOrthogroupNucleotideSequences/cleaned/cleaned_"$orthogroupNumber".fa) | /programs/hyphy-2.5.49_sse/bin/hyphy /programs/hyphy-2.5.49_sse/share/hyphy/TemplateBatchFiles/CleanStopCodons.bf
              echo 06_AlignedNucleotideOrthogroups/alignedOrthogroupNucleotideSequences/cleaned/cleaned_"$orthogroupNumber".fa >> fileListBUSTEDPH.txt
            fi
          else
            echo No foreground taxa in this orthogroup.
          fi
        fi
    else
        echo "$treeFile does not exist because this orthogroup consists of three or fewer sequences."
    fi
done < bustedPHSequenceFileList.txt

# Split the input file list into a user-specified number of chunks:
export chunkNumber="l/"$1
split --number=$chunkNumber --additional-suffix=.txt -d fileListBUSTEDPH.txt "bustedPHFileList"
# Remove any chunks that are empty:
find . -name 'bustedPHFileList*' -type f -empty -delete
# Create a file listing those chunks:
ls "bustedPHFileList"* > "bustedPHChunkList.txt"

# While the list of chunks is not empty,
while [ -s "bustedPHChunkList.txt" ]
do
  # Run BUSTED-PH, meaning:
  # Create a holder for the chunks:
  export batchSize=$1
  export currentBatch=0
  export batchFileNames=()
  # Then, while reading each line in our list of chunked files,
  while read -r line;
  do
    export batchFile=$line
    batchFileNames+=($batchFile)
    if [ ${#batchFileNames[@]} -eq $batchSize ]; then
      for batchFile in ${batchFileNames[@]} ; do
        #sleep 10 &
        ./Scripts/SingleBUSTEDPHRun $batchFile  &
      done
      wait
      batchFileNames=()
    fi
  done < "bustedPHChunkList.txt"
  # Once finished running RELAX, delete outputs with a size of zero:
  find 09_bustedPHResults/ -type f -size 0b -delete
  # Delete the old input files:
  rm "bustedPHFileList"*
  rm "bustedPHChunkList.txt"


  # And re-create a list of input files:
  # List all of the orthogroup sequence files:
  ls -hSr 06_AlignedNucleotideOrthogroups/alignedOrthogroupNucleotideSequences/cleaned* > bustedPHSequenceFileList.txt
  rm fileListBUSTEDPH.txt

  # Read the list of orthogroup sequence files.
  # If a tree file DOES exist and an output file does NOT exist, add that orthogroup sequence file to the input list, fileListBUSTEDPH.txt
  while read -r line;
  do
      export orthogroupNumber=`echo "$line" | awk -F'.' '{print ()}'`
      export treeFile="07_labelledPhylogenies/labelled_"$orthogroupNumber"_tree.txt"
      if [ -f "$treeFile" ]; then
          echo "$treeFile exists."
          FILE="./09_bustedPHResults/"$orthogroupNumber"_bustedPH.json"
          if [ -f "$FILE" ]; then
              echo "*************************************************************"
              echo "$FILE exists; BUSTED-PH has already been run on this orthogroup."
              echo "*************************************************************"
          else
            echo 06_AlignedNucleotideOrthogroups/alignedOrthogroupNucleotideSequences/cleaned/cleaned_"$orthogroupNumber".fa >> fileListBUSTEDPH.txt
          fi
      else
          echo "$treeFile does not exist because this orthogroup consists of three or fewer sequences."
      fi
  done < bustedPHSequenceFileList.txt

  # Split the input file list into a user-specified number of chunks:
  export chunkNumber="l/"$1
  split --number=$chunkNumber --additional-suffix=.txt -d fileListBUSTEDPH.txt "bustedPHFileList"
  # Remove any chunks that are empty:
  find . -name 'bustedPHFileList*' -type f -empty -delete
  # Create a file listing those chunks:
  ls "bustedPHFileList"* > "bustedPHChunkList.txt"

done
